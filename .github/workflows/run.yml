name: Run scraper on schedule

on:
  schedule:
    - cron: "0 19 * * *"   # 5:00 AM Melbourne (AEST, UTC+10)
    - cron: "0 2 * * 1-5"  # 12:00 PM Melbourne weekdays (AEST, UTC+10)
  workflow_dispatch: {}

permissions:
  contents: write  # needed to push with GITHUB_TOKEN

concurrency:
  group: scraper-${{ github.ref }}
  cancel-in-progress: false

jobs:
  scrape:
    runs-on: ubuntu-latest

    steps:
      - name: Check out repository
        uses: actions/checkout@v4
        with:
          ref: main            # <- set to the branch you want to push to
          fetch-depth: 0       # ensures history for rebase/merge

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.x"
          cache: "pip"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run scraper
        run: python scraper.py

      - name: Commit and push changes
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

          # Stage changes
          git add -A

          # Commit only if there are staged changes
          if ! git diff --cached --quiet; then
            git commit -m "Update data from scraper [skip ci]"

            # Rebase our new commit(s) onto the latest main (autostash if anything else changed)
            git pull --rebase --autostash origin main

            # Push our rebased commit(s)
            git push origin HEAD:main
          else
            echo "No changes to commit."
          fi

